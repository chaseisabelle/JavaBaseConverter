/*
 * mainJFrame.java
 *
 * Created on November 20, 2007, 1:39 AM
 *
 */

package JFramePackage;

/**
 * MainJFrame is the face of the Numeric Base Converter project.
 * 
 * @author chase isabelle
 * @version %I%, %G%
 */
public class MainJFrame
extends SemiTransparentJFrame {
    
    /**
     * default constructor.  basically just inits everything.
     */
    public MainJFrame() {
        // NetBeans intialization method
        initComponents();
        
        // My initialization method
        initializeComponents();
    }
    
    /** 
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        inputJLabel = new javax.swing.JLabel();
        outputJLabel = new javax.swing.JLabel();
        inputJFormattedTextField = new javax.swing.JFormattedTextField();
        outputJFormattedTextField = new javax.swing.JFormattedTextField();
        inputBaseJComboBox = new javax.swing.JComboBox();
        inputBaseJLabel = new javax.swing.JLabel();
        ouputBaseJLabel = new javax.swing.JLabel();
        outputBaseJComboBox = new javax.swing.JComboBox();
        titleJLabel = new javax.swing.JLabel();
        minimizeJLabel = new javax.swing.JLabel();
        exitJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Numeric Base Converter");
        setName("baseConverterJFrame"); // NOI18N
        setResizable(false);

        inputJLabel.setFont(new java.awt.Font("Arial", 0, 12));
        inputJLabel.setText("Input:");

        outputJLabel.setFont(new java.awt.Font("Arial", 0, 12));
        outputJLabel.setText("Output:");

        inputJFormattedTextField.setFont(new java.awt.Font("Monospaced", 0, 12));
        inputJFormattedTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputJFormattedTextFieldKeyReleased(evt);
            }
        });

        outputJFormattedTextField.setFont(new java.awt.Font("Monospaced", 0, 12));
        outputJFormattedTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                outputJFormattedTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                outputJFormattedTextFieldFocusLost(evt);
            }
        });

        inputBaseJComboBox.setFont(new java.awt.Font("Monospaced", 0, 12));
        inputBaseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2 (Binary)", "3", "4", "5", "6", "7", "8 (Octal)", "9", "10 (Decimal)", "11", "12", "13", "14", "15", "16 (Hexadecimal)" }));
        inputBaseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputBaseJComboBoxActionPerformed(evt);
            }
        });

        inputBaseJLabel.setFont(new java.awt.Font("Arial", 0, 12));
        inputBaseJLabel.setText("Base:");

        ouputBaseJLabel.setFont(new java.awt.Font("Arial", 0, 12));
        ouputBaseJLabel.setText("Base:");

        outputBaseJComboBox.setFont(new java.awt.Font("Monospaced", 0, 12));
        outputBaseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2 (Binary)", "3", "4", "5", "6", "7", "8 (Octal)", "9", "10 (Decimal)", "11", "12", "13", "14", "15", "16 (Hexadecimal)" }));
        outputBaseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputBaseJComboBoxActionPerformed(evt);
            }
        });

        titleJLabel.setFont(new java.awt.Font("Arial", 1, 12));
        titleJLabel.setText("Number Base Converter");

        minimizeJLabel.setFont(new java.awt.Font("Arial", 1, 12));
        minimizeJLabel.setText("_");
        minimizeJLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                minimizeJLabelMousePressed(evt);
            }
        });

        exitJLabel.setFont(new java.awt.Font("Arial", 1, 12));
        exitJLabel.setText("X");
        exitJLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exitJLabelMousePressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(titleJLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 312, Short.MAX_VALUE)
                        .add(minimizeJLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(exitJLabel))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(outputJLabel)
                            .add(inputJLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(inputJFormattedTextField)
                            .add(outputJFormattedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 227, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(inputBaseJLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(inputBaseJComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(ouputBaseJLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(outputBaseJComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(titleJLabel)
                    .add(minimizeJLabel)
                    .add(exitJLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(inputJLabel)
                    .add(inputJFormattedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(inputBaseJLabel)
                    .add(inputBaseJComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(outputJLabel)
                    .add(outputJFormattedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ouputBaseJLabel)
                    .add(outputBaseJComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * called when an action, like a mouse click or the enter key is pressed, on the
     * outputBaseJComboBox.
     * 
     * @param evt is the action performed (i.e. mouse click).
     */
    private void outputBaseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputBaseJComboBoxActionPerformed
        // be sure the user has selected a reasonable base
        if (outputBaseJComboBox.getSelectedIndex() < 2) {
            // if the user selects an unreasonable base then reset it for them
            outputBaseJComboBox.setSelectedIndex(2);
        }
        if (outputBaseJComboBox.getSelectedIndex() > 16) {
            outputBaseJComboBox.setSelectedIndex(16);
        }
        
        // whenever a new number base is selected, be sure to reset the text field's doc
        try {
            ((DocumentPackage.NumberBaseDocument)outputJFormattedTextField.getDocument()).setBase(outputBaseJComboBox.getSelectedIndex());
            outputJFormattedTextField.setText(Utilities.BaseConverter.convert(inputJFormattedTextField.getText(),
                    inputBaseJComboBox.getSelectedIndex(),
                    outputBaseJComboBox.getSelectedIndex()));
        } catch (Exception exc) {
            // debugging...
            System.out.println(exc.getMessage());
        }
    }//GEN-LAST:event_outputBaseJComboBoxActionPerformed

    /**
     * called when an action, like a mouse click or the enter key is pressed, on the
     * inputJComboBox.
     * 
     * @param evt is the action performed (i.e. mouse click).
     */
    private void inputBaseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputBaseJComboBoxActionPerformed
        // be sure the user has selected a reasonable base
        if (inputBaseJComboBox.getSelectedIndex() < 2) {
            // if the user selects an unreasonable base then reset it for them
            inputBaseJComboBox.setSelectedIndex(2);
        }
        if (inputBaseJComboBox.getSelectedIndex() > 16) {
            inputBaseJComboBox.setSelectedIndex(16);
        }

        // whenever a new number base is selected, be sure to reset the text field's doc
        try {
            ((DocumentPackage.NumberBaseDocument)inputJFormattedTextField.getDocument()).setBase(inputBaseJComboBox.getSelectedIndex());
            inputJFormattedTextField.setText(Utilities.BaseConverter.convert(outputJFormattedTextField.getText(),
                    outputBaseJComboBox.getSelectedIndex(),
                    inputBaseJComboBox.getSelectedIndex()));
        } catch (Exception exc) {
            System.out.println(exc.getMessage());
        }
    }//GEN-LAST:event_inputBaseJComboBoxActionPerformed

    /**
     * called when the inputJFormattedTextField input changes.
     * 
     * @param evt is the key release event
     */
    private void inputJFormattedTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputJFormattedTextFieldKeyReleased
        // when a key is released, it means the user has entered some sort of input
        // or they have deleted a char, either way, they are expecting an output, so...
        // convert between the bases...
        outputJFormattedTextField.setText(Utilities.BaseConverter.convert(inputJFormattedTextField.getText(), 
                inputBaseJComboBox.getSelectedIndex(),
                outputBaseJComboBox.getSelectedIndex()));
    }//GEN-LAST:event_inputJFormattedTextFieldKeyReleased

    /**
     * called when the outputJFormattedTextField loses focus.
     * <p>
     * used so the user cannot edit the output.
     * 
     * @param evt is the focus event.
     */
    private void outputJFormattedTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_outputJFormattedTextFieldFocusLost
        // reset the editable option to keep graphics consistency
        outputJFormattedTextField.setEditable(true);
    }//GEN-LAST:event_outputJFormattedTextFieldFocusLost

    /**
     * called when the outputJFormattedTextField gains focus.
     * <p>
     * used so the user cannot edit the output.
     * 
     * @param evt is the focus event.
     */
    private void outputJFormattedTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_outputJFormattedTextFieldFocusGained
        // user should not be allowed to edit the output, doesnt make sense
        // so...
        outputJFormattedTextField.setEditable(false);
    }//GEN-LAST:event_outputJFormattedTextFieldFocusGained

    /**
     * this method is called when the user wishes to minimize the jframe
     * 
     * @param evt is the mouse pressed event
     */
    private void minimizeJLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeJLabelMousePressed
        // ICONIFIED is an int that is used as the minimized-state
        setState(ICONIFIED);
    }//GEN-LAST:event_minimizeJLabelMousePressed

    /**
     * this method is called when the user wishes to exit the program
     * 
     * @param evt is the mouse pressed event
     */
    private void exitJLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitJLabelMousePressed
        // normal termination
        System.exit(0);
    }//GEN-LAST:event_exitJLabelMousePressed
    
    /**
     * This method is the first method called in the project.
     * 
     * @param args is an array of strings that represents start up parameters; however, this method
     * for this project does not used this parameter.
     */
    /**
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
     * 
     * NOTE: his code is commmented ou because the main
     * method is now in the Main class
     */
    
    /**
     *
     *
     *   !!! NON-GENERATED CODE !!!
     *
     *   !!! WRITTEN BY CHASE !!!
     *
     *
     */
    
    /**
     * This method will initialize all the components and their features that the NewtBeans generated
     * initialization method did not.
     */
    private void initializeComponents() {
        // init baseConverterJFrame to center of the screen
        int thisX = (java.awt.Toolkit.getDefaultToolkit().getScreenSize().width / 2) - (this.getWidth() / 2);
        int thisY = (java.awt.Toolkit.getDefaultToolkit().getScreenSize().height / 3) - (this.getHeight() / 2);
        this.setLocation(thisX, thisY);
        
        // set baseJComboBoxes
        // set the inputBase to 10 (Decimal)...
        inputBaseJComboBox.setSelectedIndex(10);
        // set outputBase to 2 (binary)...
        outputBaseJComboBox.setSelectedIndex(2);
        
        // set the i/o JFormattedTextField's docs
        inputJFormattedTextField.setDocument(new DocumentPackage.NumberBaseDocument(inputBaseJComboBox.getSelectedIndex()));
        outputJFormattedTextField.setDocument(new DocumentPackage.NumberBaseDocument(outputBaseJComboBox.getSelectedIndex()));
        
        /**
        // init menu stuff...
        //if (Utilities.Global.getOperatingSystem() == Utilities.Global.MAC_OS_X) {
            System.setProperty("apple.laf.useScreenMenuBar", "true");
        //}
        javax.swing.JMenuBar jMenuBar = new javax.swing.JMenuBar();
        jMenuBar.add(new javax.swing.JMenu("Fart Spray"));
        setJMenuBar(jMenuBar);
        System.out.println(System.getProperty("apple.laf.useScreenMenuBar"));
         */
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel exitJLabel;
    private javax.swing.JComboBox inputBaseJComboBox;
    private javax.swing.JLabel inputBaseJLabel;
    private javax.swing.JFormattedTextField inputJFormattedTextField;
    private javax.swing.JLabel inputJLabel;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel minimizeJLabel;
    private javax.swing.JLabel ouputBaseJLabel;
    private javax.swing.JComboBox outputBaseJComboBox;
    private javax.swing.JFormattedTextField outputJFormattedTextField;
    private javax.swing.JLabel outputJLabel;
    private javax.swing.JLabel titleJLabel;
    // End of variables declaration//GEN-END:variables
    
}
